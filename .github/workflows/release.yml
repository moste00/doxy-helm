  # This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: verify & Upload Python Package

on:
  push:
    branches:
      - release

permissions:
  contents: read

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: pip install --upgrade pip && pip install -r requirements.txt

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: run unit-tests
      run: |
        python -m unittest discover -s ./tests/unit-test/

    - name: run test the full functionality of the tool
      run: |
        python -m unittest discover -s ./tests/end-test/ 

  push-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/doxy-helm:latest

  publish-package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Install setuptools and wheel
        run: pip install --upgrade setuptools wheel

      - name: Build and Publish
        run: |
          python setup.py sdist bdist_wheel
          pip install twine
          twine upload --verbose -u __token__ -p ${{ secrets.PYPI_TOKEN }} dist/*
